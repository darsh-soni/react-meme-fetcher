{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\Web\\\\ReactProjects\\\\meme-app\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Divider from \"@mui/material/Divider\";\nimport { Link } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Meme = () => {\n  _s();\n\n  const memeUrl = \"https://meme-api.herokuapp.com/gimme\";\n  const [meme, setMeme] = useState(\"\");\n\n  const openInNewTab = meme => {\n    window.open(meme, \"_blank\", \"noopener,noreferrer\");\n  };\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  };\n\n  useEffect(() => {\n    axios.get(memeUrl).then(response => {\n      setMeme(response.data.url); // axios returns API response body in .data\n    });\n  }, []); // second param [] is a list of dependency to watch and run useEffect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 5,\n      position: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme,\n        alt: \"Meme Here!!!\",\n        style: {\n          width: 500,\n          height: 500\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: refreshPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => openInNewTab(meme),\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"https://github.com/darshsoni28\",\n        underline: \"hover\",\n        children: \"Created by - Darsh Soni\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Meme, \"vaGIc+DyXiKW+zsr7Px4aaX+HKg=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["axios","useEffect","useState","Button","Stack","Divider","Link","Meme","memeUrl","meme","setMeme","openInNewTab","window","open","refreshPage","location","reload","get","then","response","data","url","width","height"],"sources":["D:/Dev/Web/ReactProjects/meme-app/src/components/Meme.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { Link } from \"@mui/material\";\r\n\r\nexport const Meme = () => {\r\n  const memeUrl = \"https://meme-api.herokuapp.com/gimme\";\r\n  const [meme, setMeme] = useState(\"\");\r\n  const openInNewTab = meme => {\r\n    window.open(meme, \"_blank\", \"noopener,noreferrer\");\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(memeUrl).then(response => {\r\n      setMeme(response.data.url);\r\n      // axios returns API response body in .data\r\n    });\r\n  }, []); // second param [] is a list of dependency to watch and run useEffect\r\n\r\n  return (\r\n    <div>\r\n      <Stack spacing={5} position=\"center\">\r\n        <img\r\n          src={meme}\r\n          alt=\"Meme Here!!!\"\r\n          style={{ width: 500, height: 500 }}\r\n        />\r\n        <Divider />\r\n        <Button variant=\"contained\" onClick={refreshPage}>\r\n          Next\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={() => openInNewTab(meme)}>\r\n          Share\r\n        </Button>\r\n        <Divider />\r\n        <Link href=\"https://github.com/darshsoni28\" underline=\"hover\">\r\n          Created by - Darsh Soni\r\n        </Link>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,IAAT,QAAqB,eAArB;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACxB,MAAMC,OAAO,GAAG,sCAAhB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;EACA,MAAMS,YAAY,GAAGF,IAAI,IAAI;IAC3BG,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkB,QAAlB,EAA4B,qBAA5B;EACD,CAFD;;EAIA,MAAMK,WAAW,GAAG,MAAM;IACxBF,MAAM,CAACG,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;EACD,CAFD;;EAIAf,SAAS,CAAC,MAAM;IACdD,KAAK,CAACiB,GAAN,CAAUT,OAAV,EAAmBU,IAAnB,CAAwBC,QAAQ,IAAI;MAClCT,OAAO,CAACS,QAAQ,CAACC,IAAT,CAAcC,GAAf,CAAP,CADkC,CAElC;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT,CAXwB,CAgBhB;;EAER,oBACE;IAAA,uBACE,QAAC,KAAD;MAAO,OAAO,EAAE,CAAhB;MAAmB,QAAQ,EAAC,QAA5B;MAAA,wBACE;QACE,GAAG,EAAEZ,IADP;QAEE,GAAG,EAAC,cAFN;QAGE,KAAK,EAAE;UAAEa,KAAK,EAAE,GAAT;UAAcC,MAAM,EAAE;QAAtB;MAHT;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QANF,eAOE,QAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAA4B,OAAO,EAAET,WAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eAUE,QAAC,MAAD;QAAQ,OAAO,EAAC,UAAhB;QAA2B,OAAO,EAAE,MAAMH,YAAY,CAACF,IAAD,CAAtD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eAaE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAbF,eAcE,QAAC,IAAD;QAAM,IAAI,EAAC,gCAAX;QAA4C,SAAS,EAAC,OAAtD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAxCM;;GAAMF,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}