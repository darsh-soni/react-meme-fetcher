{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\Web\\\\ReactProjects\\\\meme-app\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Meme = () => {\n  _s();\n\n  const memeUrl = \"https://meme-api.herokuapp.com/gimme\";\n  const [meme, setMeme] = useState(\"\");\n  useEffect(() => {\n    axios.get(memeUrl).then(response => {\n      setMeme(response.data.url); // axios returns API response body in .data\n    });\n  }, []); // second param [] is a list of dependency to watch and run useEffect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 5,\n      position: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme,\n        alt: \"Meme Here!!!\",\n        style: {\n          width: 500,\n          height: 500\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: meme,\n        children: \"Share Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Meme, \"vaGIc+DyXiKW+zsr7Px4aaX+HKg=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["axios","useEffect","useState","Button","Stack","Meme","memeUrl","meme","setMeme","get","then","response","data","url","width","height"],"sources":["D:/Dev/Web/ReactProjects/meme-app/src/components/Meme.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport const Meme = () => {\r\n  const memeUrl = \"https://meme-api.herokuapp.com/gimme\";\r\n  const [meme, setMeme] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(memeUrl).then(response => {\r\n      setMeme(response.data.url);\r\n      // axios returns API response body in .data\r\n    });\r\n  }, []); // second param [] is a list of dependency to watch and run useEffect\r\n\r\n  return (\r\n    <div>\r\n      <Stack spacing={5} position=\"center\">\r\n        <img\r\n          src={meme}\r\n          alt=\"Meme Here!!!\"\r\n          style={{ width: 500, height: 500 }}\r\n        />\r\n        <Button variant=\"contained\">Next</Button>\r\n        <Link href={meme}>Share Meme</Link>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACxB,MAAMC,OAAO,GAAG,sCAAhB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EAEAD,SAAS,CAAC,MAAM;IACdD,KAAK,CAACS,GAAN,CAAUH,OAAV,EAAmBI,IAAnB,CAAwBC,QAAQ,IAAI;MAClCH,OAAO,CAACG,QAAQ,CAACC,IAAT,CAAcC,GAAf,CAAP,CADkC,CAElC;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT,CAJwB,CAShB;;EAER,oBACE;IAAA,uBACE,QAAC,KAAD;MAAO,OAAO,EAAE,CAAhB;MAAmB,QAAQ,EAAC,QAA5B;MAAA,wBACE;QACE,GAAG,EAAEN,IADP;QAEE,GAAG,EAAC,cAFN;QAGE,KAAK,EAAE;UAAEO,KAAK,EAAE,GAAT;UAAcC,MAAM,EAAE;QAAtB;MAHT;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAOE,QAAC,IAAD;QAAM,IAAI,EAAER,IAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAxBM;;GAAMF,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}